name: Certificate Extraction

on:
  workflow_dispatch:
    inputs:
      download_link:
        description: 'Software download link'
        required: true
      certificate_name:
        description: 'Optional: Name for the certificate (leave blank to use extracted name)'
        required: false

jobs:
  extract_certificate:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Windows SDK for signtool
        run: |
          choco install windows-sdk-10-version-2004-all -y
          echo "C:\Program Files (x86)\Windows Kits\10\bin\x64" | Out-File -Append -Encoding utf8 $env:GITHUB_PATH

      - name: Download Software
        id: download
        shell: powershell
        run: |
          $download_link = "${{ github.event.inputs.download_link }}"
          $software_name = "${{ github.event.inputs.certificate_name }}"
          Invoke-WebRequest -Uri $download_link -OutFile "$software_name.exe"
          echo "SOFTWARE_NAME=$software_name" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV

      - name: Determine Certificate Name
        id: cert_name
        shell: powershell
        run: |
          $cert_name = "${{ github.event.inputs.certificate_name }}"
          if (-not [string]::IsNullOrWhiteSpace($cert_name)) {
            echo "CERTIFICATE_NAME=$cert_name.cer" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV
          } else {
            echo "CERTIFICATE_NAME=${{ env.SOFTWARE_NAME }}.cer" | Out-File -Append -Encoding utf8 $env:GITHUB_ENV
          }

      - name: Extract Signing Certificate
        shell: powershell
        run: |
          $cert_output = "Certificates/${{ env.CERTIFICATE_NAME }}"
          mkdir -Force Certificates
          & "C:\Program Files (x86)\Windows Kits\10\bin\x64\signtool.exe" verify /pa "${{ env.SOFTWARE_NAME }}.exe" > "$cert_output"

      - name: Update README.md
        shell: powershell
        run: |
          $date = Get-Date -Format "yyyy-MM-dd"
          (Get-Content README.md) -replace 'Last certificate extracted on: .*', "Last certificate extracted on: $date" | Set-Content README.md
          git config --local user.name "github-actions"
          git config --local user.email "action@github.com"
          git add README.md
          git commit -m "Updated README with last extraction date"
          git push
