name: Code Signing & Verification

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  sign-and-verify:
    runs-on: windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set environment variables
        run: |
          echo "SIGNS_TOOL_PATH=C:\Program Files (x86)\Windows Kits\10\bin\10.0.17763.0\x64\signtool.exe" >> $GITHUB_ENV
          echo "SOFTWARE_NAME=7Zip 64Bit" >> $GITHUB_ENV
          echo "CERTIFICATE_NAME=7Zip 64Bit.cer" >> $GITHUB_ENV

      - name: Verify downloaded file
        shell: pwsh
        run: |
          Write-Host "üîç Checking if the correct file is being analyzed..."
          
          # Resolve the actual file path
          $softwarePath = (Resolve-Path "${{ env.SOFTWARE_NAME }}.exe").Path
          Write-Host "File being checked: $softwarePath"

          # Ensure the file exists
          if (!(Test-Path $softwarePath)) {
              Write-Host "‚ùå ERROR: File not found at expected path: $softwarePath"
              exit 1
          }

          # Get file size
          $size = (Get-Item $softwarePath).Length
          Write-Host "üìè File size: $size bytes"

          # Get SHA256 hash of the file
          $hash = Get-FileHash -Path $softwarePath -Algorithm SHA256
          Write-Host "üîë SHA256 Hash: $($hash.Hash)"

      - name: Check digital signature (PowerShell)
        shell: pwsh
        run: |
          Write-Host "üîç Checking if file is signed using PowerShell..."
          
          $softwarePath = (Resolve-Path "${{ env.SOFTWARE_NAME }}.exe").Path
          $signature = Get-AuthenticodeSignature -FilePath $softwarePath

          if ($signature.Status -eq "Valid") {
              Write-Host "‚úÖ File is digitally signed."
          } elseif ($signature.Status -eq "NotSigned") {
              Write-Host "‚ùå No digital signature found in the file!"
              exit 1
          } else {
              Write-Host "‚ö†Ô∏è Signature status unknown: $($signature.Status)"
              exit 1
          }

      - name: Verify signature with SignTool
        shell: pwsh
        run: |
          Write-Host "üîç Verifying digital signature using SignTool..."
          
          $softwarePath = (Resolve-Path "${{ env.SOFTWARE_NAME }}.exe").Path
          $signToolPath = "${{ env.SIGNS_TOOL_PATH }}"

          & "$signToolPath" verify /pa /all "$softwarePath"
          if ($LASTEXITCODE -ne 0) {
              Write-Host "‚ùå SignTool verification failed!"
              exit 1
          } else {
              Write-Host "‚úÖ SignTool verification successful."
          }
