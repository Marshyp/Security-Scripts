name: Certificate Extraction

on:
  workflow_dispatch:
    inputs:
      download_link:
        description: 'Software download link'
        required: true
      certificate_name:
        description: 'Optional: Name for the certificate (leave blank to use extracted name)'
        required: false

jobs:
  extract_certificate:
    runs-on: windows-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Download Software
        id: download
        run: |
          $download_link = "${{ github.event.inputs.download_link }}"
          $software_name = [System.IO.Path]::GetFileNameWithoutExtension($download_link) # Adjust if the extension is different
          Invoke-WebRequest -Uri $download_link -OutFile "$software_name.exe"
          echo "software_name=${software_name}" >> $GITHUB_ENV

      - name: Determine Certificate Name
        id: cert_name
        run: |
          $certificate_name = "${{ github.event.inputs.certificate_name }}"
          if (-not [string]::IsNullOrWhiteSpace($certificate_name)) {
            # Use provided certificate name if it exists
            echo "certificate_name=${certificate_name}" >> $GITHUB_ENV
          } else {
            # Use extracted software name if no custom name is provided
            echo "certificate_name=${{ env.software_name }}" >> $GITHUB_ENV
          }

      - name: Extract Signing Certificate
        run: |
          $certificate_name = "${{ env.certificate_name }}.cer"
          # Extract the signing certificate using signtool
          signtool verify /pa "${{ env.software_name }}.exe" > "$certificate_name" # Adjust command as necessary
          mkdir -p Certificates
          Move-Item "$certificate_name" "Certificates/$certificate_name"

      - name: Update README.md
        run: |
          Add-Content README.md "Last certificate extracted on: $(Get-Date -Format 'yyyy-MM-dd')"
          Add-Content README.md "Updated software: ${{ env.software_name }}"
          git config --local user.name "github-actions"
          git config --local user.email "action@github.com"
          git add README.md
          git commit -m "Update README.md with last extraction date"
          git push
